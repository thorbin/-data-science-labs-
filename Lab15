---
title: "Lab 15"
authors: Ryan Bilkie, Jorge Robelo, Mandy Karako, Thorbin Atwell-Donoughy, Erik Svenneby
date: "12/10/2019"
output: html_document
---

##How does alcohol consumption relate to health and well-being?

The Black Swans have been hired by the World Health Organization to analyze how the patterns of alcohol consumption affect various measures of health and well-being. This question is important because alcohol is consumed worldwide in a variety of forms, and it is estimated that drinking causes (globablly) 2.8 million premature deaths per year (https://ourworldindata.org/alcohol-consumption). It is useful to understand how and why (in what form) alcohol is dangerous (or beneficial) to health.

The primary dataset we will be using is from FiveThirtyEight (https://github.com/fivethirtyeight/data/blob/master/alcohol-consumption/drinks.csv), in conjunction with various other datasets such as gapminder.org.  The alcohol dataset is a worldwide tally of total litres of alcohol consumed, in addition to total servings of beer, wine, spirits, per country for 2010.


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(modelr)
library(readxl)
library(diplyr)
library(knitr)
library(modelr)
library(purrr)

alcohol <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/alcohol-consumption/drinks.csv")

```

## Conclusion, Recommendation, and a plot communicating conclusion or basis for your recommendation


##Ryan's Section

I'm interested in how the individual forms of consumption (wine, beer, and spirits) relate to one another in terms of health. For the measurement of health, I will use life expectancy (from gapminder.org). First we import the data and tidy it such that life expectancy for 2010 per country is joined to the alcohol dataset.


```{r}
#download.file('https://github.com/Gapminder-Indicators/lex/raw/master/lex-by-gapminder.xlsx', destfile = 'lex-by-gapminder.xlsx')


life_exp = read_excel("C:\\Users\\ryanb\\OneDrive\\Desktop\\Data Science 2019\\life_expectancy_years.xlsx")
```


```{r}
m <- merge(alcohol, life_exp[ , c('country', '2010')],
           by.x = 'country', by.y = 'country')

colnames(m)[ncol(m)] <- 'lex'
# Removing countries with NA life exp.
m <- m[!is.na(m$lex), ]
```

Now we are ready to see who were the top consumers of wine, beer and spirits:
```{r}
top_wine <- m[order(m$wine_servings, decreasing = TRUE),]
top_wine <- top_wine[1:10, c('country', 'wine_servings', 'lex')]
top_wine$drink <- 'wine'
top_wine
```

## Beer
```{r}
top_beer <- m[order(m$beer_servings, decreasing = TRUE),]
top_beer <- top_beer[1:10, c('country', 'beer_servings', 'lex')]
top_beer$drink <- 'beer'
top_beer
```

## Spirit
```{r}
top_spirit <- m[order(m$spirit_servings, decreasing = TRUE),]
top_spirit <- top_spirit[1:10, c('country', 'spirit_servings', 'lex')]
top_spirit$drink <- 'spirit'
top_spirit
```

This sort of exploratory data analysis gives us an idea of which countries drink which kind of alcoholic beverage. Note that the top 9/10 wine consumers are European countries. This will be important near the end when we're analyzing our models.

Let's see what a boxplot tells us about the life expectancy for wine drinkers, beer drinkers and spirit drinkers based on this data.


```{r}
top_drink <- rbind(top_wine[, c('lex', 'drink')],
                   rbind(top_beer[, c('lex', 'drink')], top_spirit[, c('lex', 'drink')]))
top_drink
```

```{r}
ggplot(data = top_drink, aes(x = drink, y = lex)) +
    geom_boxplot() +
    ggtitle('Life expectancy for top 10 countries in consumption of wine, beer, and spirit')
```


This is a fascinating result. Wine is the clear victor here, and with the smallest standard error at that.

Now let's look at how volumes of each beverage consumed relate to life expectancy using geom_points and geom_smooths:

## Wine
```{r}
ggplot(m, aes(x = wine_servings, y = lex)) +
    geom_point() +
    geom_smooth()
```

## Beer
```{r}
ggplot(m, aes(x = beer_servings, y = lex)) +
    geom_point() +
    geom_smooth()
```



## Spirits
```{r}
ggplot(m, aes(x = spirit_servings, y = lex)) +
    geom_point() +
    geom_smooth()
```


This gives us a clearer picture of the patterns of life expectancy in relation to the various drinks. Notice the lower life expectancy towards the lower end of the x-axis--why should that be? For spirit consumption in particular, it rises sharply up to about 100 servings and then drops down steadily. We will explore this issue near the end of our analysis. For now, we will fit some models and add predictions:


```{r}

wine_2 <-  tibble::data_frame(
  x = m$wine_servings,
  y = m$lex
)

head(wine_2)

m2 <- lm(y ~ x, data = wine_2)
grid <- wine_2 %>%
  data_grid(x)
grid

grid <- grid %>%
  add_predictions(m2)
grid
coef(m2)


ggplot(data = m) +
  geom_point(mapping = aes(x = wine_servings, y = lex))+
  labs(title= "Predicting LifeExp from Wine Consumption", x = "Amount of wine consumed", y = "Life Expectancy")+
  geom_line(aes(x, y = pred), data = grid, colour = 'red', size = 1)



```


```{r}

beer_2 <-  tibble::data_frame(
  x = m$beer_servings,
  y = m$lex
)


m3 <- lm(y ~ x, data = beer_2)
grid2 <- beer_2 %>%
  data_grid(x)


grid2 <- grid2 %>%
  add_predictions(m3)

coef(m3)


ggplot(data = m) +
  geom_point(mapping = aes(x = beer_servings, y = lex))+
  labs(title= "Predicting LifeExp from Beer Consumption", x = "Amount of beer consumed", y = "Life Expectancy")+
  geom_line(aes(x, y = pred), data = grid2, colour = 'red', size = 1)



```

```{r}

spirit_2 <-  tibble::data_frame(
  x = m$spirit_servings,
  y = m$lex
)


m4 <- lm(y ~ x, data = spirit_2)
grid3 <- spirit_2 %>%
  data_grid(x)


grid3 <- grid3 %>%
  add_predictions(m4)

coef(m4)


ggplot(data = m) +
  geom_point(mapping = aes(x = spirit_servings, y = lex))+
  labs(title= "Predicting LifeExp from Spirit Consumption", x = "Amount of spirits consumed", y = "Life Expectancy")+
  geom_line(aes(x, y = pred), data = grid3, colour = 'red', size = 1)



```


Surprisingly, all three drinks predict clearly higher life expectancy based on higher consumption. This is seems to run against the trend we saw above in our point/smooth plots. That means we need to further investiage. 

It might be useful to look at the residuals. Since the slopes are similar for all three linear models, we will only look at one.

```{r}
wine_2 <- wine_2 %>%
  add_residuals(m2)

ggplot(wine_2, aes(resid)) + 
  geom_freqpoly(binwidth = 0.5)


```

It appears that the smallest residuals tend to be highest in count--meaning that these models are not bad, though not perfect. There is a good deal of variability, but the linear trend is still clear.

One conclusion to draw from these data is that wine consumption is a strong predictor of life expectency, relative to beerand spirits. However, this might not be valid, as there could possibly be confounding variables at play, which we have not explored. We notice that the biggest wine-consumers, for instance, reside on the European continent, and it's possible that the higher life expectency there is due to other factors, such diet, climate, or lifestyle.

There's something else going on here: when we look at the table of this data, we notice that there are several countries that consume 0 alcohol per year, such as Afghanistan, Libya, Iran, Yemen, Pakistan, and North Korea). These countries also happen to be countries that are war-torn, or impoverished, or both. That is a clear confounding variable that we should filter out. So what happens when we only look at countries that consume more than 50 servings of a given drink per year?


```{r}
ggplot(m[m$wine_servings>=50,], aes(x = wine_servings, y = lex)) +
    geom_point() +
    labs(title= "Wine Consumed >= 50")+
    geom_smooth(method='lm')
```

```{r}
ggplot(m[m$beer_servings>=50,], aes(x = beer_servings, y = lex)) +
    geom_point() +
    labs(title= "Beer Consumed >= 50")+
    geom_smooth(method = 'lm')
```

```{r}
ggplot(m[m$spirit_servings>=50,], aes(x = spirit_servings, y = lex)) +
    geom_point() +
    labs(title= "Spirits Consumed >= 50")+
    geom_smooth(method = 'lm')
```

Now we are able to see the trend much more clearly. Wine has a strong incline, beer a steady incline, and spirits a sharp decline.

Conclusion: it is evident from these data and analyses that wine consumption is indeed associated with better health outcomes than beer, and beer is better than spirits, though more work would need to be done to tease out the confounding variables (such as doing this comparison between wine drinkers and spirit drinkers within the same country). But that would require more data and more data scientists.


 ### Thorbin's section
 
 The question I want to try and answer is: Does alcohol consumption by country have a noticeable effect on murder rates? The data I am using is from the gapminder data set and the fivethirtyeight data set on git hub. Since the first data set lists the consumption in different types of alcohol, I can do the same analysis for each different type of spirit to see if there is a noticeable general trend. 
  My hypothesis is that if there is a positive trend in alcohol consumption, harder liqours will have the most murder-prone stats due to quicker and more significant intoxicative properties.
  
  ```{R}
#importing data
wasteage<-read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/alcohol-consumption/drinks.csv")
merkage<-read_csv("~/Desktop/murder_total_deaths.csv")
```
```{R}
#separating data
merkage_10<-select(merkage,country,'2010')%>% rename("Murders"='2010')#the alcohol data is only for 2010
merk_ineb<-full_join(merkage_10,wasteage,by="country")
beer<-select(merk_ineb,Murders,beer_servings,)%>%rename("consumption"=beer_servings) %>% filter()
hard_alc<-select(merk_ineb,Murders,spirit_servings)%>%rename("consumption"=spirit_servings)
wine<-select(merk_ineb,Murders,wine_servings)%>%rename("consumption"=wine_servings)
```

Since I now have the data separated and simplified, I need to plot murder rates vs alcohol consumption, since no time variable data exists for the alcohol consumption data, an analysis by country is not possible. To get around this, what I need to do is group all people together and create a continuous scale on alcohol consumption and murder rates. I justify this by saying that when consumption of alcohol occurs, humans become intoxicated. A possible confounding variable to this analysis would certainly be altitude of each country. This is because drinking at altitude requires less alcohol to become intoxicated meaning that countries at altitude would generally show fewer Liters of alcohol consumed at the respective murder rate therefore juking the stats. Ill ignore this because I dont have the time and energy to calculate average altitude for each country. 

```{r}
#generating initial plots
ggplot(data=beer,mapping=aes(x=consumption,y=Murders))+geom_point()+ggtitle("Beer servings in Liters vs Murders")
ggplot(data=hard_alc,mapping=aes(x=consumption,y=Murders))+geom_point()+ggtitle("Hard alcohol servings in Liters vs Murders")
ggplot(data=wine,mapping=aes(x=consumption,y=Murders))+geom_point()+ggtitle("Wine servings in Liters vs Murders")
```

We can see from the plots that there will not be a strong arguement for my hypothesis, but an arguement none the less. The next portion will be finding series of linear models that tell us the general but rather inaccurate trend between alchol consumption and murders, the differences in slope will tell us how significant outliers effect the linear model, since each slope will be different, general conclusions can be drawn about the murder potency of each alcohol type observed. 

For each model, I will create 100 different lines of varying slope. I will then calculate the slope and y-intercept of each line and then arrange them into a tibble to be used in the next loop series. looking at the plots, I want the slopes of all lines to have a mean of 0 and standard deviation of 400 distributed normally (negative slopes are discarded). The y intercept will be uniformly distributed around 1500. 

```{R}
#creating linear models, just generates a bunch of lines. 
slp_int<-tibble(slope=rnorm(200,0,sd=400),y_int=runif(200,0,1500)) %>% filter(slope>=0)
```
Now to add the family of lines to all the plots.

```{r}
#beer plot
ggplot(data=beer,mapping=aes(x=consumption,y=Murders))+geom_point()+ geom_abline(data=slp_int,mapping=aes(intercept=slp_int$y_int,slope=slp_int$slope),alpla=.25)+ggtitle("Beer servings in Liters vs Murders")
#hard alcohol plot
ggplot(data=hard_alc,mapping=aes(x=consumption,y=Murders))+geom_point()+ geom_abline(data=slp_int,mapping=aes(intercept=slp_int$y_int,slope=slp_int$slope),alpha=.25)+ggtitle("Hard-Alchol servings in Liters vs Murders")
#wine plot
ggplot(data=wine,mapping=aes(x=consumption,y=Murders))+geom_point()+ geom_abline(data=slp_int,mapping=aes(intercept=slp_int$y_int,slope=slp_int$slope),alpha=.25)+ggtitle("wine servings in Liters vs Murders")
```

Now I need to make a function that will take each individual line and calculate the horizontal distance between each data point and then calculate the rms distance per that line. I will then integrate each of these values into a table to select the best lines based on smallest rms difference. Since I used the same distribution on each plot I shouldnt have to worry about varying line families due to different random distributions. 

```{R}
  
  model<-function(a,data)#a=slp_int, input is deduced from getting_that_thing
  {
    line<-a[1]*data$consumption+a[2]
    #this returns the murder value for each value of     consumption on a given y intercept
  }
  sending_that_thing<-function(mod,data) #calculates the rms distance   for a single line 
  {
    diff<-data$Murders-model(mod,data)
    rms_diff<-sqrt(mean(diff^2,na.rm=TRUE))
    return(rms_diff)
    #returns the value, difficulty is that the vectors used are not the same length, the map function takes one operation and applies it to another function to circumvent this.
  }
  getting_that_thing_beer<-function(d1,d2)
  {
    sending_that_thing(c(d1,d2),beer) #sets us up so that we can name a data frame as an arguement to an overlapping function.
  }
   getting_that_thing_hard_alc<-function(d1,d2)
  {
    sending_that_thing(c(d1,d2),hard_alc) #sets us up so that we can name a data frame as an arguement to an overlapping function.
   }
    getting_that_thing_wine<-function(d1,d2)
  {
    sending_that_thing(c(d1,d2),wine) #sets us up so that we can name a data frame as an arguement to an overlapping function.
  }
beer_int<-slp_int %>% mutate(dist=map2_dbl(slp_int$slope,slp_int$y_int,getting_that_thing_beer))
beer_lines<-beer_int%>% filter(rank(dist)<=10) # dist: 6586 y_int: 591 slp:5.65
hard_alc_int<-slp_int %>% mutate(dist=map2_dbl(slp_int$slope,slp_int$y_int,getting_that_thing_hard_alc)) 
hard_alc_lines<-hard_alc_int%>% filter(rank(dist)<=10) # dist: 6594 y_int: 591 slp:5.65
wine_int<-slp_int %>% mutate(dist=map2_dbl(slp_int$slope,slp_int$y_int,getting_that_thing_wine))
wine_lines<-wine_int%>% filter(rank(dist)<=10) # dist: 6712 y_int: 591 slp:5.65
```
```{r}
ggplot(data=beer)+geom_point(mapping=aes(x=consumption,y=Murders))+geom_abline(mapping=aes(slope=5.65,intercept=591))+ggtitle("Consumption of beer (L) vs Murders")
ggplot(data=hard_alc)+geom_point(mapping=aes(x=consumption,y=Murders))+geom_abline(mapping=aes(slope=5.65,intercept=591))+ggtitle("Consumption of Hard alcohol (L) vs Murders")
ggplot(data=wine)+geom_point(mapping=aes(x=consumption,y=Murders))+geom_abline(mapping=aes(slope=5.65,intercept=591))+ggtitle("Consumption of Wine (L) vs Murders")
```

From the comments giving the best slope, y intercept and rms distance, we can see that the lines do not differ at all in their plot. But the rms distances differ slightly. This indicates that there is a variance in murder rates for each type of line, however to definitively say that it is dependent on alcohol type would be incorrect because there are no observed trends on this behavior in time. But what these results appear to indicate is that alcohol type and consumption does not play a significant role in the murder rate of any given country. 


#Jorge R Start
```{r}

library(dplyr)





x <- x %>% mutate_each(funs(toupper), country)
y <- y %>% mutate_each(funs(toupper), country)

w<-inner_join(y, x, by = "country")

colnames(w)[colnames(w)=="2010"] <- "life_exp"



```

```{r}
perm_cor <- function(perms = 1000, x, y)
{
  
  perm_mean_diffC <- numeric(perms)
  # Loop throught number of permutations
  for (i in c(1:perms))
  {
    # Step 2:
    # Randomly mix up the values in the vector "y"
    rand_order_y <-sample(y)
    # Step 3:
    # Compute the correlation between x and the randomly mixed
    # up y-vector. Store this value in the vector from step 1.
    
    vc<-cor(x, rand_order_y) 
    
    perm_mean_diffC[i]= vc
    
  }
  
  # Step 4:
  # Return new updated vector, created in step 1
  return(perm_mean_diffC)
}


```

```{r}
xc<-w$total_litres_of_pure_alcohol
yc<-w$life_exp


```

```{r}
xyc<-perm_cor(perms = 1000, xc, yc)
```

   "corralation between GPD and Literacy rates in Kuwait"


```{r}
cor(xc,yc)
```

```{r}
 ggplot(, aes(x = xc, y = yc))+
  geom_smooth(method = "lm")+
  ggtitle("GPD and Life expectancy")+
  labs(y="total_litres_of_pure_alcohol", x = "life expectancy")
   

```

plot
```{r echo=FALSE, warning=FALSE}
ggplot(, aes(x=xyc)) +
  geom_histogram(alpha=.9, fill="cornflowerblue")+
  #geom_density(alpha=.2, fill="tan")+
  labs(title="Permutated Correlation Distribution", 
       subtitle="Correlation Distribution differences between GDP and life expectancy in from 170 countrie in 2010",
       x="Diffrence in Correlation Distribution"
  )+ geom_segment(aes(x = -0.127073245,y =0, xend = -0.2345, yend = 0))+ 
  geom_segment(aes(x = -0.127073245,y =0, xend = -0.127073245, yend = 27))+
  geom_segment(aes(x =  .129212019 ,y =0, xend = 0.234, yend = 0))+
  geom_segment(aes(x =  .129212019 ,y =0, xend =  .129212019 , yend = 27))+
  geom_vline(xintercept = cor(xc,yc), color="blue")+
  annotate(geom="text", x=-0.2, y=6, label="critical region ",
              color="red")+
  annotate(geom="text", x=0.2, y=6, label="critical region ",
              color="darkred")+
  annotate(geom="text", x=cor(xc,yc), y=60, label="critical region ",
              color="blue")



```
Your team has been hired as data science collaborators by a domain expert to answer an overall question and 4-5 sub-questions. Describe who the domain expert is, what questions you will be answering, why the questions are important/interesting, and what data you will be using. Provide a link or reference to the dataset(s).


```

```{r}
quantile(xyc, probs = seq(0, 1, 0.05))

we find a statistically significat corralation between GDP and Life Expectancy at the global scale (170 countires)

corralation a positivly strongs

##end Jorge R

# Summary of who did what.

Ryan wrote the introduction of the team section and analyzed how the individual beverages affected health.

Thorbin knitted the document
