based of lab 10 

#Jorge R 


#What features did you create and why did you choose those features?

To finds out if there is a factor that contributes to appropriate or optimal answer and questions scores would be best at first to focus at the lowest resolution in relation to the given topic

Thus, the broadest concept related to the given topic, Python Questions from Stack Overflow, would be under the broadest umbrella that encompasses the topic which I hypothesis is the word:  code.  

My question at hand is, is there any differences in averages or outliers scores concerning the exlution or inclution of the word : code, in both question and answers scores.


```{r include=FALSE}

library(tidyverse)
library(plyr)

knitr::opts_chunk$set(echo = T,
                      results = "hide")
answersjj <- read_csv("C:/Users/chele/Documents/stats_data_sci/lab10zip/answers_trunc.csv")
questionjsj <- read_csv("C:/Users/chele/Documents/stats_data_sci/lab10zip/questions_trunc.csv")
merged <- answersjj %>%
  left_join(questionjsj, c('ParentId' = 'Id')) 
merged <- merged %>% 
  mutate(total_time = CreationDate.x - CreationDate.y) %>%
  filter(total_time>0)
```


```{r}
#working with Quest
test<-str_detect(questionjsj$Body, "code")

test2<-questionjsj$Score

test3<-data.frame(test,test2)

CT<-test3 %>% filter(test==T)

CF<-test3 %>% filter(test==F)

mean(CT$test2)

mean(CF$test2)

"total mean diff for q scores"

mean(CT$test2)-mean(CF$test2)

#working with Ans
Atest<-str_detect(answersjj$Body, "code")

Atest2<-answersjj$Score


Atest3<-data.frame(Atest,Atest2)

ACT<-Atest3 %>% filter(Atest==T)

ACF<-Atest3 %>% filter(Atest==F)


mean(ACT$Atest2)

mean(ACF$Atest2)

"total mean diff for q scores"

mean(ACT$Atest2)-mean(ACF$Atest2)

#perm funtion to see if categories matter in determining if mean diff are statistically significant

perm_mean <- function(perms = 1000, all_values, n_A)
  {
    ## Variables ##
    # perms: The number of permutations 
    # all_values (num): all data values
    # n_A (int): Size of group A
    ###############
    
    # Step 1:
    # Create vector of zeroes of length "perms" to store
    # permuted mean differnces
    perm_mean_diff <- numeric(perms)
    # Loop throught number of permutations
    for (i in c(1:perms))
    {
      
      rand_order <-sample(all_values)
      group_A <-rand_order[1:n_A]
      group_B <-rand_order[(n_A+1):length(all_values)]
      
      # Step 3:
      # Compute the sample means for the two groups from 
      # step 2
      A_bar <- mean(group_A)
      B_bar <- mean(group_B)
      
      # Step 4: 
      # Compute the difference in sample means, store the
      # value in the vector from step 1
      diff_means <- A_bar - B_bar
      
      
      perm_mean_diff[i] = diff_means
    }
      # Step 5:
      # Return the permuted mean differences vector
      
      
      return(perm_mean_diff)
 
    }
  

```

```{r}
x<-perm_mean(perms=1000, all_values=test3$test2, n_A=(length(test3$test)/2))

hist(x)

 quantile(x, probs = seq(0, 1, 0.05))
 
 "total mean diff for quest"
 mean(CT$test2)-mean(CF$test2)
 
 "groups are not stat sig"

```

```{r}
x<-perm_mean(perms=1000, all_values=Atest3$Atest2, n_A=(length(Atest3$Atest)/2))

hist(x)

 quantile(x, probs = seq(0, 1, 0.05))
 
  "total mean diff for ans"
 mean(ACT$Atest2)-mean(ACF$Atest2)

"groups are stat sig"

```
